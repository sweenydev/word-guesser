"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ParserService = void 0;
var ParserService = /** @class */ (function () {
    function ParserService() {
    }
    ParserService.prototype.parseVideo = function (data) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y;
        if (!data)
            return undefined;
        try {
            var title = '';
            if (data.compactVideoRenderer) {
                title = data.compactVideoRenderer.title.runs[0].text;
                title = title.replace("\\\\", "\\");
                try {
                    title = decodeURIComponent(title);
                }
                catch (e) {
                    // @ts-ignore
                }
                return {
                    id: {
                        videoId: data.compactVideoRenderer.videoId
                    },
                    url: "https://www.youtube.com/watch?v=" + data.compactVideoRenderer.videoId,
                    title: title,
                    description: data.compactVideoRenderer.descriptionSnippet && data.compactVideoRenderer.descriptionSnippet.runs[0] ? data.compactVideoRenderer.descriptionSnippet.runs[0].text : "",
                    duration_raw: data.compactVideoRenderer.lengthText ? data.compactVideoRenderer.lengthText.simpleText : null,
                    snippet: {
                        url: "https://www.youtube.com/watch?v=" + data.compactVideoRenderer.videoId,
                        duration: data.compactVideoRenderer.lengthText ? data.compactVideoRenderer.lengthText.simpleText : null,
                        publishedAt: data.compactVideoRenderer.publishedTimeText ? data.compactVideoRenderer.publishedTimeText.simpleText : null,
                        thumbnails: {
                            id: data.compactVideoRenderer.videoId,
                            url: data.compactVideoRenderer.thumbnail.thumbnails[data.compactVideoRenderer.thumbnail.thumbnails.length - 1].url,
                            default: data.compactVideoRenderer.thumbnail.thumbnails[data.compactVideoRenderer.thumbnail.thumbnails.length - 1],
                            high: data.compactVideoRenderer.thumbnail.thumbnails[data.compactVideoRenderer.thumbnail.thumbnails.length - 1],
                            height: data.compactVideoRenderer.thumbnail.thumbnails[data.compactVideoRenderer.thumbnail.thumbnails.length - 1].height,
                            width: data.compactVideoRenderer.thumbnail.thumbnails[data.compactVideoRenderer.thumbnail.thumbnails.length - 1].width
                        },
                        title: title,
                        views: data.compactVideoRenderer.viewCountText && data.compactVideoRenderer.viewCountText.simpleText ? data.compactVideoRenderer.viewCountText.simpleText.replace(/[^0-9]/g, "") : 0
                    },
                    views: data.compactVideoRenderer.viewCountText && data.compactVideoRenderer.viewCountText.simpleText ? data.compactVideoRenderer.viewCountText.simpleText.replace(/[^0-9]/g, "") : 0
                };
            }
            else if (data.videoWithContextRenderer) {
                if (((_a = data.videoWithContextRenderer.headline) === null || _a === void 0 ? void 0 : _a.runs) && ((_b = data.videoWithContextRenderer.headline) === null || _b === void 0 ? void 0 : _b.runs.length) > 0) {
                    title = (_c = data.videoWithContextRenderer.headline) === null || _c === void 0 ? void 0 : _c.runs[0].text;
                }
                else {
                    title = (_f = (_e = (_d = data.videoWithContextRenderer.headline) === null || _d === void 0 ? void 0 : _d.accessibility) === null || _e === void 0 ? void 0 : _e.accessibilityData) === null || _f === void 0 ? void 0 : _f.label;
                }
                title = title.replace("\\\\", "\\");
                try {
                    title = decodeURIComponent(title);
                }
                catch (e) {
                    // @ts-ignore
                }
                return {
                    id: {
                        videoId: data.videoWithContextRenderer.videoId
                    },
                    url: "https://www.youtube.com/watch?v=" + data.videoWithContextRenderer.videoId,
                    title: title,
                    description: '',
                    duration_raw: (_j = (_h = (_g = data.videoWithContextRenderer.lengthText) === null || _g === void 0 ? void 0 : _g.accessibility) === null || _h === void 0 ? void 0 : _h.accessibilityData) === null || _j === void 0 ? void 0 : _j.text,
                    snippet: {
                        url: "https://www.youtube.com/watch?v=" + data.videoWithContextRenderer.videoId,
                        duration: (_m = (_l = (_k = data.videoWithContextRenderer.lengthText) === null || _k === void 0 ? void 0 : _k.accessibility) === null || _l === void 0 ? void 0 : _l.accessibilityData) === null || _m === void 0 ? void 0 : _m.text,
                        publishedAt: ((_p = (_o = data.videoWithContextRenderer.publishedTimeText) === null || _o === void 0 ? void 0 : _o.runs) === null || _p === void 0 ? void 0 : _p.length) > 0 ? (_q = data.videoWithContextRenderer.publishedTimeText) === null || _q === void 0 ? void 0 : _q.runs[0].text : null,
                        thumbnails: {
                            id: data.videoWithContextRenderer.videoId,
                            url: data.videoWithContextRenderer.thumbnail.thumbnails[data.videoWithContextRenderer.thumbnail.thumbnails.length - 1].url,
                            default: data.videoWithContextRenderer.thumbnail.thumbnails[data.videoWithContextRenderer.thumbnail.thumbnails.length - 1],
                            high: data.videoWithContextRenderer.thumbnail.thumbnails[data.videoWithContextRenderer.thumbnail.thumbnails.length - 1],
                            height: data.videoWithContextRenderer.thumbnail.thumbnails[data.videoWithContextRenderer.thumbnail.thumbnails.length - 1].height,
                            width: data.videoWithContextRenderer.thumbnail.thumbnails[data.videoWithContextRenderer.thumbnail.thumbnails.length - 1].width
                        },
                        title: title,
                        views: (_u = (_t = (_s = (_r = data.videoWithContextRenderer.shortViewCountText) === null || _r === void 0 ? void 0 : _r.accessibility) === null || _s === void 0 ? void 0 : _s.accessibilityData) === null || _t === void 0 ? void 0 : _t.label) === null || _u === void 0 ? void 0 : _u.replace(/[^0-9]/g, "")
                    },
                    views: (_y = (_x = (_w = (_v = data.videoWithContextRenderer.shortViewCountText) === null || _v === void 0 ? void 0 : _v.accessibility) === null || _w === void 0 ? void 0 : _w.accessibilityData) === null || _x === void 0 ? void 0 : _x.label) === null || _y === void 0 ? void 0 : _y.replace(/[^0-9]/g, "")
                };
            }
            return undefined;
        }
        catch (e) {
            return undefined;
        }
    };
    return ParserService;
}());
exports.ParserService = ParserService;
